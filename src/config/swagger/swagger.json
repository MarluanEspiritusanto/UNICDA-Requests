{
  "swagger": "2.0",
  "info": {
    "description": "Backend for UNICDA Requests",
    "version": "1.0.0",
    "title": "Swagger UNICDA Requests",
    "contact": {
      "email": "marluanespiritusantoguerrero@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "unicdarequests.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "Authentication",
      "description": "Everything about authentication"
    },
    {
      "name": "User",
      "description": "Everything about users"
    },
    {
      "name": "Request",
      "description": "Everything about requests"
    },
    {
      "name": "FormType",
      "description": "Everything about formType"
    },
    {
      "name": "Role",
      "description": "Everything about role"
    },
    {
      "name": "Step",
      "description": "Everything about step"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/auth/signIn": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login",
        "description": "",
        "operationId": "signIn",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Username and Password for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/signUp": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register as generic user",
        "description": "",
        "operationId": "signUp",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Username, Email and Password for signup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUp"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Finds All the Users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Register as generic user",
        "description": "",
        "operationId": "Create User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "User Created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Find one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/user/setRole/{userId}": {
      "post": {
        "tags": ["User"],
        "summary": "Set role to user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "body",
            "name": "roleId",
            "description": "Role Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid roleId or userId value"
          }
        }
      }
    },
    "/request": {
      "get": {
        "tags": ["Request"],
        "summary": "Finds All the Requests",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["Request"],
        "summary": "Create a new request",
        "description": "",
        "operationId": "Create Request",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/request/{id}": {
      "get": {
        "tags": ["Request"],
        "summary": "Find one request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Request Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["Request"],
        "summary": "Update one request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Request Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["Request"],
        "summary": "Delete one request",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Request Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/request/{requestId}/getForm": {
      "get": {
        "tags": ["Request"],
        "summary": "Find request forms",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "type": "string",
            "description": "Request Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid RequestId value"
          }
        }
      }
    },
    "/request/create/{requestId}": {
      "post": {
        "tags": ["Request"],
        "summary": "Create request requisition",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "type": "string",
            "description": "Request Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request"
              }
            }
          },
          "400": {
            "description": "Invalid RequestId value"
          }
        }
      }
    },
    "/formType": {
      "get": {
        "tags": ["FormType"],
        "summary": "Finds All the Users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["FormType"],
        "summary": "Create a new FormType",
        "description": "",
        "operationId": "Create FormType",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create formType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FormType"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "User Created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/formType/{id}": {
      "get": {
        "tags": ["FormType"],
        "summary": "Find one formType",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "FormType Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormType"
              }
            }
          },
          "400": {
            "description": "Invalid FormType value"
          }
        }
      },
      "patch": {
        "tags": ["FormType"],
        "summary": "Update one formType",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "FormType Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormType"
              }
            }
          },
          "400": {
            "description": "Invalid FormType value"
          }
        }
      },
      "delete": {
        "tags": ["FormType"],
        "summary": "Delete one formType",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "FormType Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FormType"
              }
            }
          },
          "400": {
            "description": "Invalid FormType value"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": ["Role"],
        "summary": "Finds all roles",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "400": {
            "description": "Invalid role value"
          }
        }
      },
      "post": {
        "tags": ["Role"],
        "summary": "Create a new Role",
        "description": "",
        "operationId": "Create Role",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Role Created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/role/{id}": {
      "get": {
        "tags": ["Role"],
        "summary": "Find one role",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Role Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "400": {
            "description": "Invalid Role value"
          }
        }
      },
      "patch": {
        "tags": ["Role"],
        "summary": "Update one role",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Role Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "400": {
            "description": "Invalid Role value"
          }
        }
      },
      "delete": {
        "tags": ["Role"],
        "summary": "Delete one role",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Role Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "400": {
            "description": "Invalid Role value"
          }
        }
      }
    },
    "/step": {
      "get": {
        "tags": ["Step"],
        "summary": "Finds all steps",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Step"
              }
            }
          },
          "400": {
            "description": "Invalid step value"
          }
        }
      },
      "post": {
        "tags": ["Step"],
        "summary": "Create a new Step",
        "description": "",
        "operationId": "Create Step",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create step",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Step"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Step Created"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/step/{id}": {
      "get": {
        "tags": ["Step"],
        "summary": "Find one step",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Step Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Step"
              }
            }
          },
          "400": {
            "description": "Invalid Step value"
          }
        }
      },
      "patch": {
        "tags": ["Step"],
        "summary": "Update one step",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Step Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Step"
              }
            }
          },
          "400": {
            "description": "Invalid Step value"
          }
        }
      },
      "delete": {
        "tags": ["Step"],
        "summary": "Delete one step",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Step Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Step"
              }
            }
          },
          "400": {
            "description": "Invalid Step value"
          }
        }
      }
    },
    "/setSteps/{requestId}": {
      "post": {
        "tags": ["Step"],
        "summary": "Set Steps to Request",
        "description": "",
        "operationId": "Set Steps to Request",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Step Id"
              }
            },
            "name": "steps",
            "description": "Create step",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Auth token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Step setted"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Request": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SignIn": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "format": "string"
        },
        "password": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "SignUp": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "format": "string"
        },
        "email": {
          "type": "string",
          "format": "string"
        },
        "passwotd": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "RequestForm": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "requestFormId": {
          "type": "string",
          "format": "string"
        },
        "requestId": {
          "type": "string",
          "format": "string"
        },
        "label": {
          "type": "string",
          "format": "string"
        },
        "value": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": [
            "COMPLETED",
            "REJECTED",
            "CANCELLED",
            "RECORD_PENDING",
            "CORDINATOR_PENDING",
            "PAYMENT_PENDING",
            "APPROVE_PENDING"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FormType": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RequestHistory": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "reviewId": {
          "$ref": "#/definitions/User"
        },
        "userId": {
          "$ref": "#/definitions/User"
        },
        "requestId": {
          "$ref": "#/definitions/Request"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Step": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "description": {
          "type": "string",
          "format": "string"
        },
        "roleOfficer": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roles": {
          "$ref": "#/definitions/Role"
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Request Status",
          "enum": ["ACTIVE", "INACTIVE"]
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
